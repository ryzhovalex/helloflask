"""empty message

Revision ID: 719bb73b65a0
Revises: e565041c5419
Create Date: 2021-05-29 21:15:29.496951

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '719bb73b65a0'
down_revision = 'e565041c5419'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('nickname', sa.String(length=80), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_addresses',
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['address.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('address_id', 'user_id')
    )
    op.drop_table('club')
    op.drop_table('won_player_sets')
    op.drop_table('won_player_matches')
    op.drop_table('championship')
    op.drop_table('set')
    op.drop_table('lost_club_matches')
    op.drop_table('won_club_sets')
    op.drop_table('won_club_matches')
    op.drop_table('match')
    op.drop_table('season')
    op.drop_table('skill')
    op.drop_table('lost_club_sets')
    op.drop_table('lost_player_sets')
    op.drop_table('lost_player_matches')
    op.drop_table('player')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('player',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), nullable=False),
    sa.Column('age', sa.INTEGER(), nullable=False),
    sa.Column('country', sa.VARCHAR(length=80), nullable=False),
    sa.Column('rating', sa.INTEGER(), nullable=True),
    sa.Column('club_role', sa.VARCHAR(length=15), nullable=False),
    sa.Column('club_id', sa.INTEGER(), nullable=False),
    sa.Column('matches_won', sa.INTEGER(), nullable=True),
    sa.Column('matches_lost', sa.INTEGER(), nullable=True),
    sa.Column('sets_won', sa.INTEGER(), nullable=True),
    sa.Column('sets_lost', sa.INTEGER(), nullable=True),
    sa.Column('plays_won', sa.INTEGER(), nullable=True),
    sa.Column('plays_lost', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('lost_player_matches',
    sa.Column('match_id', sa.INTEGER(), nullable=False),
    sa.Column('player_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('match_id', 'player_id')
    )
    op.create_table('lost_player_sets',
    sa.Column('set_id', sa.INTEGER(), nullable=False),
    sa.Column('player_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['set_id'], ['set.id'], ),
    sa.PrimaryKeyConstraint('set_id', 'player_id')
    )
    op.create_table('lost_club_sets',
    sa.Column('set_id', sa.INTEGER(), nullable=False),
    sa.Column('club_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['set_id'], ['set.id'], ),
    sa.PrimaryKeyConstraint('set_id', 'club_id')
    )
    op.create_table('skill',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('person_id', sa.INTEGER(), nullable=False),
    sa.Column('offense', sa.INTEGER(), nullable=False),
    sa.Column('defense', sa.INTEGER(), nullable=False),
    sa.Column('shot', sa.INTEGER(), nullable=False),
    sa.Column('accuracy', sa.INTEGER(), nullable=False),
    sa.Column('speed', sa.INTEGER(), nullable=False),
    sa.Column('dexterity', sa.INTEGER(), nullable=False),
    sa.Column('perception', sa.INTEGER(), nullable=False),
    sa.Column('strategy', sa.INTEGER(), nullable=False),
    sa.Column('mindset', sa.INTEGER(), nullable=False),
    sa.Column('technique', sa.INTEGER(), nullable=False),
    sa.Column('service', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('season',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('match',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('championship_id', sa.INTEGER(), nullable=False),
    sa.Column('has_ended', sa.BOOLEAN(), nullable=True),
    sa.Column('players_amount', sa.INTEGER(), nullable=True),
    sa.Column('best_of_type', sa.INTEGER(), nullable=False),
    sa.Column('sets_final_score', sa.VARCHAR(length=3), nullable=True),
    sa.ForeignKeyConstraint(['championship_id'], ['championship.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('won_club_matches',
    sa.Column('match_id', sa.INTEGER(), nullable=False),
    sa.Column('club_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ),
    sa.PrimaryKeyConstraint('match_id', 'club_id')
    )
    op.create_table('won_club_sets',
    sa.Column('set_id', sa.INTEGER(), nullable=False),
    sa.Column('club_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['set_id'], ['set.id'], ),
    sa.PrimaryKeyConstraint('set_id', 'club_id')
    )
    op.create_table('lost_club_matches',
    sa.Column('match_id', sa.INTEGER(), nullable=False),
    sa.Column('club_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ),
    sa.PrimaryKeyConstraint('match_id', 'club_id')
    )
    op.create_table('set',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('match_id', sa.INTEGER(), nullable=False),
    sa.Column('has_ended', sa.BOOLEAN(), nullable=True),
    sa.Column('plays_final_loser_score', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('championship',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), nullable=False),
    sa.Column('tier', sa.INTEGER(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('won_player_matches',
    sa.Column('match_id', sa.INTEGER(), nullable=False),
    sa.Column('player_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('match_id', 'player_id')
    )
    op.create_table('won_player_sets',
    sa.Column('set_id', sa.INTEGER(), nullable=False),
    sa.Column('player_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['set_id'], ['set.id'], ),
    sa.PrimaryKeyConstraint('set_id', 'player_id')
    )
    op.create_table('club',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), nullable=False),
    sa.Column('country', sa.VARCHAR(length=80), nullable=False),
    sa.Column('rating', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('user_addresses')
    op.drop_table('order')
    op.drop_table('account')
    op.drop_table('user')
    op.drop_table('address')
    # ### end Alembic commands ###
